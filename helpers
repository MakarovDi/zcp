#####################################################################
##         ZSH Config Pack by Dmitry Makarov (aka Loki)            ##
#####################################################################
##                         Help functions                          ##
#####################################################################
##             Absolutly free to use/modification                  ##
#####################################################################

#### Provides useful information on globbing

help-zshglob() 
{
    echo -e "

    /      directories
    .      plain files
    @      symbolic links
    =      sockets
    p      named pipes (FIFOs)
    *      executable plain files (0100)
    %      device files (character or block special)
    %b     block special files
    %c     character special files
    r      owner-readable files (0400)
    w      owner-writable files (0200)
    x      owner-executable files (0100)
    A      group-readable files (0040)
    I      group-writable files (0020)
    E      group-executable files (0010)
    R      world-readable files (0004)
    W      world-writable files (0002)
    X      world-executable files (0001)
    s      setuid files (04000)
    S      setgid files (02000)
    t      files with the sticky bit (01000)
  print *(m-1)          # Files modified up to a day ago
  print *(a1)           # Files accessed a day ago
  print *(@)            # Just symlinks
  print *(Lk+50)        # Files bigger than 50 kilobytes
  print *(Lk-50)        # Files smaller than 50 kilobytes
  print **/*.c          # All *.c files recursively starting in \$PWD
  print **/*.c~file.c   # Same as above, but excluding 'file.c'
  print (foo|bar).*     # Files starting with 'foo' or 'bar'
  print *~*.*           # All Files that do not contain a dot
  chmod 644 *(.^x)      # make all plain non-executable files publically readable
  print -l *(.c|.h)     # Lists *.c and *.h
  print **/*(g:users:)  # Recursively match all files that are owned by group 'users'
  echo /proc/*/cwd(:h:t:s/self//) # Analogous to >ps ax | awk '{print $1}'<
"
}
zle -N help-zshglob  ## register as widget (for future keybinding)


##### Provides keybindings info

help-keys() 
{
  echo -e "

  [Tab]             - autocompletion
  [Tab+Tab]         - autocompletion with menu
  [Ctrl+Left/Right] - navigate though words
  [Ctrl+g]          - show zsh globbing help
  [Ctrl+k]          - show this help
  [PageUp]          - incremental history search backward 
  [PageDown]        - incremental history search forward
  [Ctrl+Space]      - undo
  [Insert]          - pick item but stay in the menu
  [Num+]            - show completion menu
  [Ctrl+v]          - get key-code
  [Ctrl+/]          - delete symbols until slash
  [Ctrl+w]          - delete symbols until space
  [Ctrl+r]          - incremental history search
  [Ctrl+z]          - suspend job
  [Ctrl+A, d]       - detach from screen
"
}
zle -N help-keys  ## register as widget (for future keybinding)


##### Provides alias info

help-aliases()
{
  ## TODO
}
zle -N help-aliases  ## register as widget (for future keybinding)


##### Provides additional commands info

help-subroutines()
{
  ## TODO
}
zle -N help-subroutines  ## register as widget (for future keybinding)

